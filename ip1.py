# -*- coding: utf-8 -*-
"""IP1

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Scf97W3Pox_dV9bCwUDpKD7w1ZXxFZbB
"""

import cv2

img=cv2.imread('/content/messi.jfif')

from google.colab.patches import cv2_imshow

cv2_imshow(img)

grayscale = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
cv2_imshow(grayscale)

gn = (255-grayscale)
cv2_imshow(gn)

p,q=grayscale.shape

p

q

import numpy as np

m=np.zeros((p,q))

for i in range(p):
  for j in range(q):
    if(grayscale[i][j]>50):
      m[i][j]=255
    else:
      m[i][j]=0

n=np.hstack((grayscale,m))

import matplotlib.pyplot as plt 
plt.imshow(n,cmap="gray")

#GRAY LEVEL SLICING

a,b=grayscale.shape

a

b

y=np.zeros((a,b))

for i in range(a):
  for j in range(b):
    if(grayscale[i][j]>=100 and grayscale[i][j]<205):
      m[i][j]=255
    else:
      m[i][j]=0

n=np.hstack((grayscale,m))

import matplotlib.pyplot as plt 
plt.imshow(n,cmap="gray")

for i in range(a):
  for j in range(b):
    if(grayscale[i][j]>=100 and grayscale[i][j]<205):
      m[i][j]=255
    else:
      m[i][j]=grayscale[i][j]

n=np.hstack((grayscale,m))

import matplotlib.pyplot as plt 
plt.imshow(n,cmap="gray")

"""**CONCLUSION:**In image negative for grayscale image, the black and white portions of the image gets interchanged
In threshold we select a pixel value and if the pixel at that point is greater than the selected threshold value then that portion will be white and the rest will be black
GRAY LEVEL SLICING has 2 pixel values and if the pixel value lies between that value then the colour is white or else it is black
"""

